{"version":3,"sources":["components/profile/profile.module.css","components/Statistics/statistic.module.css","components/profile/profile.js","components/Statistics/statisticEl.js","components/Statistics/statisticList.js","components/FriendListItem/FriendListItem.js","components/FriendListItem/FriendList.js","components/TransactionHistory/TransactionHistory.styled.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","username","tag","location","stats","className","s","description","src","alt","name","label","followers","quantity","quantityGreen","views","likes","colors","Statistic","percentage","style","backgroundColor","Math","floor","random","length","fontWeight","StatisticList","title","statList","map","id","item","prototype","propTypes","arrayOf","shape","string","isRequired","FriendListItem","isOnline","width","FriendList","friends","friend","Wrapper","styled","table","Thead","thead","Article","th","Row","td","MainRow","tr","props","TableHistory","items","type","amount","currency","App","user","data","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28ecf1e8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"profile_description__2yZHn\",\"avatar\":\"profile_avatar__11VwT\",\"name\":\"profile_name__1zEX5\",\"tag\":\"profile_tag__2pJjV\",\"location\":\"profile_location__2D1Pk\",\"stats\":\"profile_stats__2DBWY\",\"quantity\":\"profile_quantity__8A3IG\",\"quantityGreen\":\"profile_quantityGreen__1EE4i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"statistic_statList__3Jl9z\",\"item\":\"statistic_item__2-jn8\",\"percentage\":\"statistic_percentage__3k72G\",\"title\":\"statistic_title__2jHY-\"};","import propTypes from 'prop-types';\nimport s from './profile.module.css';\n\nconst Profile = ({\n  avatar,\n  username,\n  tag,\n  location,\n  stats,\n}) => (\n  <div className={s.description}>\n    <img src={avatar} alt=\"User avatar\" className={s.avatar} />\n    <p className={s.name}>{username}</p>\n    <p className={s.tag}>@{tag}</p>\n    <p className={s.location}>{location}</p>\n    <ul>\n      <li className={s.stats}>\n        <span className={s.label}>Followers </span>\n        <span className={stats.followers > 1500 ? s.quantity : s.quantityGreen}>\n          {stats.followers}\n        </span>\n      </li>\n      <li className={s.stats}>\n        <span className={s.label}>Views</span>\n        <span className={stats.views > 1500 ? s.quantity : s.quantityGreen}>\n          {stats.views}\n        </span>\n      </li>\n      <li className={s.stats}>\n        <span className={s.label}>Likes</span>\n        <span className={stats.likes > 1500 ? s.quantity : s.quantityGreen}>\n          {stats.likes}\n        </span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  username: propTypes.string.isRequired,\n  tag: propTypes.string.isRequired,\n  location: propTypes.string.isRequired,\n  avatar: propTypes.string.isRequired,\n  stats:propTypes.objectOf(propTypes.number),\n};\n\nexport default Profile;\n","import propTypes from 'prop-types';\n\nconst colors = [\n  '#00FF7F',\n  '#FF1493',\n  '#FFD700',\n  '#FF00FF',\n  '#8A2BE2',\n  '#0000CD',\n  '#DAA520',\n  '\t#D2691E',\n];\n\nconst Statistic = ({ label, percentage,className }) => (\n  <li style={{backgroundColor:colors[Math.floor(Math.random() * colors.length)]}} className={className}>     \n    <span className=\"label\">{label} </span>\n    <span style={{ fontWeight: 'bold' }}>{percentage} %</span>\n  </li>\n);\n\nStatistic.propTypes = {\n  label: propTypes.string.isRequired,\n  percentage: propTypes.number.isRequired,\n  className:propTypes.string.isRequired,\n};\nexport default Statistic;\n","import propTypes from 'prop-types';\nimport Statistic from './statisticEl';\nimport s from './statistic.module.css';\n\n\n\nconst StatisticList = ({ stats, title }) => {\n  return (\n    <div>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.statList}>\n        {stats.map(({ id, label, percentage }) => (\n\n         <Statistic label={label} percentage={percentage} key={id} className={s.item}/>\n       \n        ))}\n      </ul>\n    </div>\n  );\n};\n\nStatisticList.prototype = {\n  stats: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n\n  title: propTypes.string.isRequired,\n};\n\nexport default StatisticList;\n","import propTypes from 'prop-types';\n\nexport default function FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <li className=\"item\">\n      <img\n        className=\"isOnline\"\n        src={\n          isOnline\n            ? 'https://img.icons8.com/emoji/48/000000/green-circle-emoji.png'\n            : 'https://img.icons8.com/emoji/48/000000/red-circle-emoji.png'\n        }\n        width=\"15px\"\n        alt=\"\"\n      />\n      <img className=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\n      <p className=\"name\">{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  isOnline: propTypes.bool,\n};\n","import propTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.table`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: 0.1px solid rgb(213, 218, 218);\r\n  box-shadow: 17px 18px 15px -5px rgba(68, 67, 67, 0.75);\r\n  font-family: cursive;\r\n  margin: 16px 0;\r\n\r\n  width: 250px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const Thead = styled.thead`\r\n  text-align: center;\r\n`;\r\n\r\nexport const Article = styled.th`\r\n  text-align: center;\r\n  width: 83px;\r\n`;\r\n\r\nexport const Row = styled.td`\r\n  width: 83px;\r\n  text-align: start;\r\n  border: 0.1px solid rgb(213, 218, 218);\r\n`;\r\n\r\nexport const MainRow = styled.tr`\r\n  background-color: ${props => props.id}6e;\r\n`;\r\n","import propTypes from 'prop-types';\nimport {\n  Wrapper,\n  Thead,\n  Article,\n  Row,\n  MainRow,\n} from './TransactionHistory.styled';\n\nconst colors = [\n  '#00FF7F',\n  '#FF1493',\n  '#FFD700',\n  '#FF00FF',\n  '#8A2BE2',\n  '#0000CD',\n  '#DAA520',\n  '\t#D2691E',\n];\n\nconst TableHistory = ({ items }) => {\n  return (\n    <Wrapper>\n      <Thead>\n        <tr>\n          <Article>Type</Article>\n          <Article>Amount</Article>\n          <Article>Currency</Article>\n        </tr>\n      </Thead>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <MainRow\n            key={id}\n            id={colors[Math.floor(Math.random() * colors.length)]}\n          >\n            <Row>{type}</Row>\n            <Row>{amount}</Row>\n            <Row>{currency}</Row>\n          </MainRow>\n        ))}\n      </tbody>\n    </Wrapper>\n  );\n};\n\nexport default TableHistory;\n\nTableHistory.propTypes = {\n  items: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n      type: propTypes.string.isRequired,\n      amount: propTypes.string.isRequired,\n      currency: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import Profile from './components/profile/profile';\r\nimport user from './data/user.json';\r\nimport StatisticList from './components/Statistics/statisticList';\r\nimport data from './data/data.json';\r\nimport FriendList from './components/FriendListItem/FriendList';\r\nimport friends from './data/friends.json';\r\nimport TableHistory from './components/TransactionHistory/TransactionHistory';\r\nimport transactions from './data/transactions.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <section className=\"profile\">\r\n        <Profile\r\n          avatar={user.avatar}\r\n          username={user.username}\r\n          tag={user.tag}\r\n          location={user.location}\r\n          stats={user.stats}\r\n        />\r\n      </section>\r\n\r\n      <section className=\"statistics\">\r\n        <StatisticList stats={data} title=\"Upload stats\" />\r\n      </section>\r\n\r\n      <section className=\"statistics\">\r\n        <FriendList friends={friends}></FriendList>\r\n      </section>\r\n\r\n      <TableHistory items={transactions}></TableHistory>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}