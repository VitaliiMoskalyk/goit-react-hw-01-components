{"version":3,"sources":["components/profile/profile.module.css","components/Statistics/statistic.module.css","components/profile/profile.js","components/Statistics/statisticEl.js","components/statisticList.js","components/FriendListItem/FriendListItem.js","components/FriendList.js","components/TransactionHistory/TransactionHistory.styled.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Profile","avatar","username","tag","location","followers","views","likes","className","s","description","src","alt","name","stats","label","quantity","quantityGreen","Statistic","percentage","style","fontWeight","colors","StatisticList","title","statList","map","id","item","backgroundColor","Math","floor","random","length","prototype","propTypes","arrayOf","shape","string","isRequired","FriendListItem","isOnline","width","FriendList","friends","friend","Wrapper","styled","table","Thead","thead","Article","th","Row","td","MainRow","tr","props","TableHistory","items","type","amount","currency","App","user","data","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.823a3aef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"profile_description__2yZHn\",\"avatar\":\"profile_avatar__11VwT\",\"name\":\"profile_name__1zEX5\",\"tag\":\"profile_tag__2pJjV\",\"location\":\"profile_location__2D1Pk\",\"stats\":\"profile_stats__2DBWY\",\"quantity\":\"profile_quantity__8A3IG\",\"quantityGreen\":\"profile_quantityGreen__1EE4i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"statistic_statList__3Jl9z\",\"item\":\"statistic_item__2-jn8\",\"percentage\":\"statistic_percentage__3k72G\",\"title\":\"statistic_title__2jHY-\"};","import propTypes from 'prop-types';\nimport s from './profile.module.css';\n\nconst Profile = ({\n  avatar,\n  username,\n  tag,\n  location,\n  followers,\n  views,\n  likes,\n}) => (\n  <div className={s.description}>\n    <img src={avatar} alt=\"User avatar\" className={s.avatar} />\n    <p className={s.name}>{username}</p>\n    <p className={s.tag}>@{tag}</p>\n    <p className={s.location}>{location}</p>\n    <ul>\n      <li className={s.stats}>\n        <span className={s.label}>Followers </span>\n        <span className={followers > 1500 ? s.quantity : s.quantityGreen}>\n          {followers}\n        </span>\n      </li>\n      <li className={s.stats}>\n        <span className={s.label}>Views</span>\n        <span className={views > 1500 ? s.quantity : s.quantityGreen}>\n          {views}\n        </span>\n      </li>\n      <li className={s.stats}>\n        <span className={s.label}>Likes</span>\n        <span className={likes > 1500 ? s.quantity : s.quantityGreen}>\n          {likes}\n        </span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  username: propTypes.string.isRequired,\n  tag: propTypes.string.isRequired,\n  location: propTypes.string.isRequired,\n  avatar: propTypes.string.isRequired,\n  followers: propTypes.number.isRequired,\n  views: propTypes.number.isRequired,\n  likes: propTypes.number.isRequired,\n};\n\nexport default Profile;\n","import propTypes from 'prop-types';\n\nconst Statistic = ({ label, percentage }) => (\n  <>\n    <span className=\"label\">{label} </span>\n    <span style={{ fontWeight: 'bold' }}>{percentage} %</span>\n  </>\n);\n\nStatistic.propTypes = {\n  label: propTypes.string.isRequired,\n  percentage: propTypes.number.isRequired,\n};\nexport default Statistic;\n","import propTypes from 'prop-types';\nimport Statistic from './Statistics/statisticEl';\nimport s from './Statistics/statistic.module.css';\n\nconst colors = [\n  '#00FF7F',\n  '#FF1493',\n  '#FFD700',\n  '#FF00FF',\n  '#8A2BE2',\n  '#0000CD',\n  '#DAA520',\n  '\t#D2691E',\n];\n\nconst StatisticList = ({ stats, title }) => {\n  return (\n    <div>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <ul className={s.statList}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            className={s.item}\n            style={{\n              backgroundColor:\n                colors[Math.floor(Math.random() * colors.length)],\n            }}\n            key={id}\n          >\n            <Statistic label={label} percentage={percentage}></Statistic>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nStatisticList.prototype = {\n  stats: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string.isRequired,\n    }),\n  ).isRequired,\n\n  title: propTypes.string.isRequired,\n};\n\nexport default StatisticList;\n","import propTypes from 'prop-types';\n\nexport default function FriendListItem({ avatar, name, isOnline }) {\n  return (\n    <li className=\"item\">\n      <img\n        className=\"isOnline\"\n        src={\n          isOnline\n            ? 'https://img.icons8.com/emoji/48/000000/green-circle-emoji.png'\n            : 'https://img.icons8.com/emoji/48/000000/red-circle-emoji.png'\n        }\n        width=\"15px\"\n        alt=\"\"\n      ></img>\n      <img className=\"avatar\" src={avatar} alt=\"User avatar\" width=\"48\" />\n      <p className=\"name\">{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: propTypes.string.isRequired,\n  name: propTypes.string.isRequired,\n  isOnline: propTypes.bool,\n};\n","import propTypes from 'prop-types';\nimport FriendListItem from './FriendListItem/FriendListItem';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul className=\"friend-list\">\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        ></FriendListItem>\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number.isRequired,\n    }),\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.table`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  border: 0.1px solid rgb(213, 218, 218);\n  box-shadow: 17px 18px 15px -5px rgba(68, 67, 67, 0.75);\n  font-family: cursive;\n  margin: 16px 0;\n\n  width: 250px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Thead = styled.thead`\n  text-align: center;\n`;\n\nexport const Article = styled.th`\n  text-align: center;\n  width: 83px;\n  \n`;\n\nexport const Row = styled.td`\nwidth: 83px;\ntext-align: start;\nborder: 0.1px solid rgb(213, 218, 218);\n\n`\n\nexport const MainRow = styled.tr`\nbackground-color:${props=>props.id}6e;\n`\n\n","import propTypes from 'prop-types';\nimport { Wrapper, Thead, Article,Row,MainRow } from './TransactionHistory.styled';\n\nconst colors = [\n  '#00FF7F',\n  '#FF1493',\n  '#FFD700',\n  '#FF00FF',\n  '#8A2BE2',\n  '#0000CD',\n  '#DAA520',\n  '\t#D2691E',\n];\n\nconst TableHistory = ({ items }) => {\n  return (\n    <Wrapper>\n      <Thead>\n        <tr>\n          <Article>Type</Article>\n          <Article>Amount</Article>\n          <Article>Currency</Article>\n        </tr>\n      </Thead>\n\n      <tbody>\n        {items.map(({ id, type, amount, currency }) => (\n          <MainRow key={id} id={colors[Math.floor(Math.random() * colors.length)]}>\n            <Row>{type}</Row>\n            <Row>{amount}</Row>\n            <Row>{currency}</Row>\n          </MainRow>\n        ))}\n      </tbody>\n    </Wrapper>\n  );\n};\n\nexport default TableHistory;\n\nTableHistory.propTypes = {\n    items:propTypes.arrayOf(\n    propTypes.shape({\n        id: propTypes.string.isRequired,\n        type: propTypes.string.isRequired,\n    amount: propTypes.string.isRequired,\n    currency:propTypes.string.isRequired,\n    }),\n        \n    ).isRequired,\n    \n};\n","import Profile from './components/profile/profile';\nimport user from './data/user.json';\nimport StatisticList from './components/statisticList';\nimport data from './data/data.json';\nimport FriendList from './components/FriendList';\nimport friends from './data/friends.json';\nimport TableHistory from './components/TransactionHistory/TransactionHistory';\nimport transactions from './data/transactions.json';\n\nconst App = () => {\n  return (\n    <>\n      <section className=\"profile\">\n        <Profile\n          avatar={user.avatar}\n          username={user.username}\n          tag={user.tag}\n          location={user.location}\n          followers={user.stats.followers}\n          views={user.stats.views}\n          likes={user.stats.likes}\n        />\n      </section>\n\n      <section className=\"statistics\">\n        <StatisticList stats={data} title=\"Upload stats\" />\n      </section>\n\n      <section className=\"statistics\">\n        <FriendList friends={friends}></FriendList>\n      </section>\n\n      <TableHistory items={transactions}></TableHistory>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}